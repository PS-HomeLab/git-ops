---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: github-actions
spec:
  interval: 30m

  chart:
    spec:
      chart: gha-runner-scale-set
      version: 0.10.1
      sourceRef:
        kind: HelmRepository
        name: github
        namespace: flux-system

  values:
    imagePullSecrets:
      - name: nexus-registry

    githubConfigUrl: https://github.com/PS-HomeLab
    githubConfigSecret: github-auth

    runnerScaleSetName: self-hosted

    containerMode:
      type: "kubernetes"  ## type can be set to dind or kubernetes
      ## the following is required when containerMode.type=kubernetes
      kubernetesModeWorkVolumeClaim:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "longhorn"
        resources:
          requests:
            storage: 1Gi

    template:
      spec:
        securityContext:
          fsGroup: 123
        initContainers:
          - name: kube-init
            image: ghcr.io/actions/actions-runner:latest
            command: [ "sudo", "chown", "-R", "1001:123", "/home/runner/_work" ]
            volumeMounts:
              - name: work
                mountPath: /home/runner/_work

        containers:
          - name: runner
            image: ghcr.io/actions/actions-runner:latest
            command: ["/home/runner/run.sh"]
            env:
              - name: ACTIONS_RUNNER_CONTAINER_HOOKS
                value: /home/runner/k8s/index.js
              - name: ACTIONS_RUNNER_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: ACTIONS_RUNNER_REQUIRE_JOB_CONTAINER
                value: "true"
            envFrom:
              - secretRef:
                  name: runner-envs
            volumeMounts:
              - name: work
                mountPath: /home/runner/_work

        volumes:
          - name: work
            ephemeral:
              volumeClaimTemplate:
                spec:
                  accessModes: [ "ReadWriteOnce" ]
                  storageClassName: "longhorn"
                  resources:
                    requests:
                      storage: 1Gi
